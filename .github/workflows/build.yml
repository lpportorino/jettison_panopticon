name: Build Panopticon for NVIDIA Jetson Orin AGX

on:
  push:
    branches: [ main, master, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build-jetson:
    name: Build for NVIDIA Jetson Orin AGX (ARM64)
    runs-on: ubuntu-22.04-arm

    strategy:
      matrix:
        python-version: ['3.12']

    permissions:
      contents: write  # Needed to push submodule updates

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # Need full history for submodule updates

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Configure git for automated commits
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"

      - name: Check and update Python bindings
        id: check-bindings
        run: |
          # Make script executable
          chmod +x ./scripts/update_bindings.sh

          # Run the update check
          ./scripts/update_bindings.sh || EXIT_CODE=$?

          if [ "$EXIT_CODE" = "78" ]; then
            echo "Bindings were updated and pushed. Workflow will restart automatically."
            echo "restart_needed=true" >> $GITHUB_OUTPUT
            exit 0
          elif [ "$EXIT_CODE" != "0" ]; then
            echo "Failed to check bindings"
            exit $EXIT_CODE
          fi

          echo "restart_needed=false" >> $GITHUB_OUTPUT

      - name: Cancel build if restart needed
        if: steps.check-bindings.outputs.restart_needed == 'true'
        run: |
          echo "Build cancelled - will restart with updated bindings"
          exit 0

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang \
            lld \
            ccache \
            patchelf \
            build-essential \
            libssl-dev \
            libffi-dev \
            python3-dev

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Build with Nuitka for Jetson
        env:
          CC: clang
          CXX: clang++
          # Optimize for Cortex-A78AE found in Jetson Orin
          CFLAGS: -O3 -march=armv8.2-a+crypto+fp16+rcpc+dotprod -flto=thin -ffast-math
          CXXFLAGS: -O3 -march=armv8.2-a+crypto+fp16+rcpc+dotprod -flto=thin -ffast-math
          LDFLAGS: -flto=thin
        run: |
          echo "Building for NVIDIA Jetson Orin AGX (Cortex-A78AE)"
          make build-ci

      - name: Test built binary
        run: |
          ./dist/panopticon --version || true
          file ./dist/panopticon
          ldd ./dist/panopticon || true

      - name: Create artifact name
        id: artifact
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${GITHUB_SHA::8}
          fi
          echo "name=panopticon-jetson-orin-${VERSION}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.name }}
          path: dist/panopticon
          retention-days: 30

      - name: Create Release (on tags)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: dist/panopticon
          generate_release_notes: true
          name: Panopticon for NVIDIA Jetson Orin AGX - ${{ github.ref_name }}
          body: |
            ## NVIDIA Jetson Orin AGX Release

            This binary is specifically built and optimized for:
            - **Platform**: NVIDIA Jetson Orin AGX 32GB
            - **Architecture**: ARM64 (aarch64)
            - **CPU**: Cortex-A78AE with NEON/Crypto extensions
            - **Optimization**: -O3 with LTO and ARM-specific optimizations

            **Note**: This binary will NOT run on other ARM64 platforms.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}